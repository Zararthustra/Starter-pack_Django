openapi: 3.1.0
info:
  title: My Project
  version: 1.0.0
  description: OpenAPI specification template for a new project

tags:
  - name: Authentication
  - name: My endpoint global
  - name: My endpoint detail

servers:
  - url: http://localhost:8000/api/v1
    description: "Local API server"
  - url: https://{{host}}/api/v1
    description: "Production API server"
    variables:
      host:
        default: domain.com

components:
  requestBodies:
    user:
      required: true
      content:
        application/json:
          schema:
            description: Register request body
            type: object
            required:
              - username
              - password
            properties:
              username:
                type: string
                description: User name
              password:
                type: string
                description: User password
            example:
              username: myuser
              password: xxxxxx

  responses:
    "401":
      description: Unauthorized because token is not valid or has not been provided
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/detailResponse"
              - $ref: "#/components/schemas/token_not_valid"
          examples:
            no token:
              value:
                detail: Authentication credentials were not provided.
            not valid token:
              value:
                detail: Given token not valid for any token type
                code: token_not_valid
                messages:
                  - token_class: AccessToken
                    token_type: access
                    message: Token is invalid or expired

  schemas:
    badRequestResponse:
      type: object
      properties:
        field_name:
          type: array
          items:
            type: string
      example:
        field_name:
          - This field is required
    messageResponse:
      type: object
      properties:
        message:
          type: string
      example:
        message: User created successfully
    detailResponse:
      type: object
      properties:
        detail:
          type: string
      example:
        detail: No active account found with the given credentials
    dataResponse:
      type: object
      properties:
        total:
          type: integer
        from:
          type: integer
        to:
          type: integer
        is_last_page:
          type: boolean
        data:
          type: array
          items:
            type: object
      example:
        total: 2
        from: 1
        to: 2
        is_last_page: true
        data:
          - "key": "value1"
          - "key": "value2"
    tokens:
      type: object
      properties:
        access:
          type: string
        refresh:
          type: string
      example:
        access: eyJhbGciOiJIUzI1NiIsI...
        refresh: eyJhbGciOiJIUzI1NiIsI...
    token_not_valid:
      type: object
      properties:
        detail:
          type: string
        code:
          type: string
        messages:
          type: array
          items:
            type: object
            properties:
              token_class:
                type: string
              token_type:
                type: string
              message:
                type: string
      example:
        detail: Given token not valid for any token type
        code: token_not_valid
        messages:
          - token_class: AccessToken
            token_type: access
            message: Token is invalid or expired

  examples:
    tokens:
      value:
        refresh: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY2NjE4NjE0NSwiaWF0IjoxNjY2MDk5NzQ1LCJqdGkiOiIyNmU0YWE2NmU2YTg0MTQ0ODM5OTlmZTRjMTAzMWFkZiIsInVzZXJfaWQiOjEsIm5hbWUiOiJhcnRoeSJ9.KrmGSkxmSgRp5mfT4wNcMAWnUeAJz1qZPtszPepZ274
        access: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjY2MTAwMDQ1LCJpYXQiOjE2NjYwOTk3NDUsImp0aSI6ImE1ZjE0OWMyYzIyZTRkZTJiZmM5Mzg5NjgzOWZmMjFlIiwidXNlcl9pZCI6MSwibmFtZSI6ImFydGh5In0.phcAoGJDJ9ZmEdPLdTXgO5EWx4dkkhDjmxE-so8f-7s

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /register:
    post:
      tags:
        - Authentication
      summary: Register user
      requestBody:
        $ref: "#/components/requestBodies/user"
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/messageResponse"
              example:
                message: User created successfully

  /login:
    post:
      tags:
        - Authentication
      summary: Login user
      requestBody:
        $ref: "#/components/requestBodies/user"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tokens"
              example:
                $ref: "#/components/examples/tokens"

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailResponse"
              example:
                detail: No active account found with the given credentials

  /login/reconnect:
    post:
      tags:
        - Authentication
      summary: Reconnect user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh:
                  type: string
              example:
                refresh: eyJhbGciOiJIUzI1NiIsI...
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tokens"
              example:
                $ref: "#/components/examples/tokens"

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailResponse"
              example:
                detail: Token is invalid or expired

  /my-endpoint:
    get:
      tags:
        - My endpoint global
      summary: My list endpoint
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dataResponse"
              example:
                - total: 1
                  from: 1
                  to: 1
                  is_last_page: true
                  data:
                    id: 99a985dd-18f4-4424-adf8-2f282eb4ab00
                    name: My row
                    created_at: "2023-07-02T10:17:06.776633Z"

        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/messageResponse"
              example:
                message: Record with id '034ed24d-6213-4f9d-9c0a-e95d21bd1f82' not found.

    post:
      tags:
        - My endpoint global
      summary: My create endpoint
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              example:
                name: My row 2
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/messageResponse"
              example:
                message: Record 'My row 2' created successfully.

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/badRequestResponse"
              example:
                name:
                  - This field is required.

        "401":
          $ref: "#/components/responses/401"

  /my-endpoint/{id}:
    delete:
      parameters:
        - name: id
          in: path
          required: true
          description: Resource unique identifier
          schema:
            type: string
          example: 4b475f5f-c149-475b-8cc5-d245033e835e
      tags:
        - My endpoint detail
      summary: My delete endpoint
      security:
        - bearerAuth: []
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                type: object
              example: {}

        "401":
          $ref: "#/components/responses/401"

        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/messageResponse"
              example:
                message: Record with id '034ed24d-6213-4f9d-9c0a-e95d21bd1f82' not found.

    get:
      parameters:
        - name: id
          in: path
          required: true
          description: Resource unique identifier
          schema:
            type: string
          example: 4b475f5f-c149-475b-8cc5-d245033e835e
      tags:
        - My endpoint detail
      summary: My retrieve endpoint
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
              example:
                id: 4b475f5f-c149-475b-8cc5-d245033e835e
                name: My row
                created_at: "2023-07-02T10:17:06.776633Z"

        "401":
          $ref: "#/components/responses/401"

        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/messageResponse"
              example:
                message: Record with id '4b475f5f-c149-475b-8cc5-d245033e835e' not found.

    patch:
      parameters:
        - name: id
          in: path
          required: true
          description: Resource unique identifier
          schema:
            type: string
          example: 4b475f5f-c149-475b-8cc5-d245033e835e
      tags:
        - My endpoint detail
      summary: My modify endpoint
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                field_name: My modified value
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
              example:
                id: 4b475f5f-c149-475b-8cc5-d245033e835e
                field_name: My modified row
                created_at: "2023-07-02T10:22:37.598337Z"
                updated_at: "2023-07-02T22:09:26.025474Z"

        "401":
          $ref: "#/components/responses/401"

        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/messageResponse"
              example:
                message: Record with id '4b475f5f-c149-475b-8cc5-d245033e835e' not found.

    put:
      parameters:
        - name: id
          in: path
          required: true
          description: Resource unique identifier
          schema:
            type: string
          example: 4b475f5f-c149-475b-8cc5-d245033e835e
      tags:
        - My endpoint detail
      summary: My update endpoint
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                field_name_1: My modified value
                field_name_2: My modified value
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
              example:
                id: 4b475f5f-c149-475b-8cc5-d245033e835e
                field_name_1: My modified value
                field_name_2: My modified value
                created_at: "2023-07-02T10:22:37.598337Z"
                updated_at: "2023-07-02T22:09:26.025474Z"

        "401":
          $ref: "#/components/responses/401"

        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/messageResponse"
              example:
                message: Record with id '4b475f5f-c149-475b-8cc5-d245033e835e' not found.

  /health-check:
    get:
      summary: Health check endpoint to get server status
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/messageResponse"
              example:
                message: OK
